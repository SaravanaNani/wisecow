name: CI/CD Wisecow App

on:
  push:
    branches: ["main"]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/wisecow:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/wisecow:latest

  deploy-to-ec2:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy to EC2 Minikube
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e

            echo ">>> Checking Minikube installation..."
            if ! command -v minikube &> /dev/null; then
              echo "Installing Minikube & kubectl..."
              sudo apt update -y
              sudo apt install -y curl wget apt-transport-https ca-certificates conntrack

              curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
              sudo install minikube-linux-amd64 /usr/local/bin/minikube

              curl -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
              sudo install kubectl /usr/local/bin/
            fi

            echo ">>> Starting Minikube..."
            if ! sudo minikube status &>/dev/null; then
              sudo minikube start --driver=none --force --kubernetes-version=v1.30.0
              sudo chown -R $USER:$USER ~/.kube ~/.minikube
            fi

            echo ">>> Cloning/updating repo..."
            if [ ! -d ~/wisecow ]; then
              git clone https://github.com/<your-username>/wisecow.git ~/wisecow
            else
              cd ~/wisecow && git pull origin main
            fi
            cd ~/wisecow

            echo ">>> Creating TLS secret if not exists..."
            if ! kubectl get secret wisecow-tls &>/dev/null; then
              kubectl create secret tls wisecow-tls \
                --cert=fullchain.pem \
                --key=privkey.pem \
                -n default
            fi

            echo ">>> Deploying Wisecow app..."
            if kubectl get deploy wisecow-deployment &>/dev/null; then
              echo "Updating existing deployment with new image..."
              kubectl set image deployment/wisecow-deployment wisecow=${{ secrets.DOCKER_USERNAME }}/wisecow:latest
            else
              echo "Fresh deployment..."
              kubectl apply -f deployment.yaml
              kubectl apply -f service.yaml
              kubectl apply -f ingress.yaml
            fi

            echo ">>> Deployment complete âœ…"
